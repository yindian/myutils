#!/bin/bash

CSA2=/usr/local/bin/csa2
DATA_ROOT=/ssd/data/luck/
DATA_LIST=""

echo "Content-Type: text/html"
echo ""

cat << EOF
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8;">
<title>试试手气</title>
</head>
<body onLoad="setfocus();">
<div style="float:right;">
说明：数据来自网络。每份数据只返回前500个搜索结果。
</div>
EOF
POST_DATA=$(</dev/stdin)
if [[ "$POST_DATA" != "" ]]; then
	QUERY="$(sed 's/&/\n/g' <<< "$POST_DATA" | sed -n '/^q=/{s/^q=//;p}' | awk '
    BEGIN {
	hextab ["0"] = 0;	hextab ["8"] = 8;
	hextab ["1"] = 1;	hextab ["9"] = 9;
	hextab ["2"] = 2;	hextab ["A"] = hextab ["a"] = 10
	hextab ["3"] = 3;	hextab ["B"] = hextab ["b"] = 11;
	hextab ["4"] = 4;	hextab ["C"] = hextab ["c"] = 12;
	hextab ["5"] = 5;	hextab ["D"] = hextab ["d"] = 13;
	hextab ["6"] = 6;	hextab ["E"] = hextab ["e"] = 14;
	hextab ["7"] = 7;	hextab ["F"] = hextab ["f"] = 15;
    }
    {
    	decoded = ""
	i   = 1
	len = length ($0)
	while ( i <= len ) {
	    c = substr ($0, i, 1)
	    if ( c == "%" ) {
	    	if ( i+2 <= len ) {
		    c1 = substr ($0, i+1, 1)
		    c2 = substr ($0, i+2, 1)
		    if ( hextab [c1] == "" || hextab [c2] == "" ) {
			print "WARNING: invalid hex encoding: %" c1 c2 | \
				"cat >&2"
		    } else {
		    	code = 0 + hextab [c1] * 16 + hextab [c2] + 0
		    	#print "\ncode=", code
		    	c = sprintf ("%c", code)
			i = i + 2
		    }
		} else {
		    print "WARNING: invalid % encoding: " substr ($0, i, len - i)
		}
	    } else if ( c == "+" ) {	# special handling: "+" means " "
	    	c = " "
	    }
	    decoded = decoded c
	    ++i
	}
	print decoded
    }
	')"
else
	QUERY=
fi
cat << EOF
<form name="f" method="post">
<input type="text" size="40" name="q" value="$QUERY" placeholder="请输入待查询的用户名或密码"/>
<input type="hidden" name="foo" value="bar"/>
<input type="submit" value="手气不错"/>
</form>
EOF
if [[ "$QUERY" != "" ]]; then
	echo "<hr/>"
	echo "Querying $QUERY" >> /tmp/luck.log
	while read TITLE BASENAME; do
		echo "<h3>$TITLE</h3>"
		RESULT="$($CSA2 "$DATA_ROOT/$BASENAME.idx" "$DATA_ROOT/$BASENAME.psd" "$QUERY" 2>>/tmp/luck.log)"
		RETURN=$?
		if [[ -z "$RESULT" ]]; then
			if [[ $RETURN -ge ${#QUERY} ]]; then
				PREFIX="(空)"
			elif [[ $RETURN -lt 2 ]]; then
				PREFIX="${QUERY:0:$RETURN} (可能是程序出错，请联系管理员)"
			else
				PREFIX="${QUERY:0:$RETURN}"
			fi
			echo "没有找到结果。最长匹配前缀：$PREFIX"
		else
			if ! iconv -f utf-8 -t utf-16le <<< "$RESULT" > /dev/null 2>/dev/null; then
				RESULT="$(iconv -f gb18030 -t utf-8 -c <<< "$RESULT")"
			fi
			echo "<pre>"
			echo "$RESULT"
			echo "</pre>"
		fi
	done <<< "$DATA_LIST"
fi
cat << EOF
<script type="text/javascript"><!--
function setfocus() {
document.f.q.focus();
document.f.q.select();
}
//--></script>
</body>
</html>
EOF
