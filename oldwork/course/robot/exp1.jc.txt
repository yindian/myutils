int gi_1, run;

int mutex = 0;
int caction = -1;	/* current action  0: drive, 1: stop, 2: wait */
int cdir = -1;	/* current direction 0: forward 1: backward 2: left 3: right */
int cparam1 = 0, cparam2 = 0;
float cparam3 = 0.;
int laction = -1;	/* last  0: drive, 1: stop, 2: wait */
int ldir = -1;	/* current direction 0: forward 1: backward 2: left 3: right */
int lparam1 = 0, lparam2 = 0;
float lparam3 = 0.;
int behaved = 1;

void dodrive(int a, int b)
{
	while (mutex)
		;
	mutex = 1;
	caction = 0;
	cparam1 = a;
	cparam2 = b;
	behaved = 0;
	mutex = 0;
}

void dostop()
{
	while (mutex)
		;
	mutex = 1;
	caction = 1;
	behaved = 0;
	mutex = 0;
}

void dowait(float c)
{
	while (mutex)
		;
	mutex = 1;
	caction = 2;
	cparam3 = c;
	behaved = 0;
	mutex = 0;
}

void behave()
{
	if (behaved)
		return;
	while (mutex)
		;
	mutex = 1;
	if (caction == 0)
		drive(cparam1, cparam2);
	else if (caction == 1)
		stop();
	else if (caction == 2)
		wait(cparam3);
	laction = caction;
	lparam1 = cparam1;
	lparam2 = cparam2;
	lparam3 = cparam3;
	ldir = cdir;
	behaved = 1;
	mutex = 0;
}

void bizhang()
{
	int ir, bmp;
	while (1)
	{
		ir = ir_detector();
		bmp = bumper();
		printf("ir = %d  bmp = %d\n", ir, bmp);
		if (ir == 4 && cdir == 0)	/* obstacle ahead and now heading forward */
		{
			dostop();
			behave();
			cdir = -1;
		}
		if (ir == 1 && cdir == 0)	/* obstacle at left and now heading forward */
		{
			dodrive(25, 20);
			behave();
			dowait(0.2);
			behave();
			dodrive(25, 0);
			behave();
		}
		if (ir == 2 && cdir == 0)	/* obstacle at right and now heading forward */
		{
			dodrive(25, -20);
			behave();
			dowait(0.2);
			behave();
			dodrive(25, 0);
			behave();
		}
		if ((bmp & 8) && cdir == 1)	/* obstacle behind at right and now heading backward */
		{
			dostop();
			behave();
			dowait(0.2);
			behave();
			dodrive(30, 20);
			behave();
			dowait(0.2);
			behave();
			dostop();
			behave();
			cdir = -1;
		}
		if ((bmp & 4) && cdir == 1)	/* obstacle behind at left and now heading backward */
		{
			dostop();
			behave();
			dowait(0.2);
			behave();
			dodrive(30, -20);
			behave();
			dowait(0.2);
			behave();
			dostop();
			behave();
			cdir = -1;
		}
	}
}

void main()
{
	int pid;
    hold_serial();
   
	pid = start_process(bizhang());
    while(1)
    {
        gi_1=serial_getchar();
              
      	if(gi_1 == 97)/*a前进*/
    	{
    	
    	run=97;
    	serial_putchar(run);
    	dodrive( 25 ,0);
    	cdir = 0;
    
                 	
    	}
    	if(gi_1 == 98)/*b后退*/
     	{
    
    	run=98;
    	serial_putchar(run);
        dodrive( -25 ,0);
    	cdir = 1;
                 
    	}
    	if(gi_1 == 99)/*c左转*/
    	{
    	
    	run=99;
    	serial_putchar(run);
        dodrive( 0 ,-15);
   		cdir = 2;
     
    	}
       	if(gi_1 == 100)/*d右转*/
    	{
    	
    	run=100;
    	serial_putchar(run);
        dodrive( 0 ,15);
       	cdir = 3;
       
        }
        if(gi_1 == 101)/*e停止*/
    	{
    	dostop();
    	cdir = -1;
    	}
    	
        if(gi_1 == 102)/*f蜂鸣*/
    	{
    	beep();
    	}
    	
		behave();
    }
    share_serial();
	kill_process(pid);
	return;    
}

